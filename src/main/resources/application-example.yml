server:
  port: 8080
  forward-headers-strategy: native

spring:
  profiles:
    active: dev  # 기본 프로파일을 dev로 설정
  
  config:
    import: optional:file:.env[.properties]   # .env ????

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/SeasonThon?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC
    username: scott
    password: tiger
    hikari:
      minimum-idle: 2
      maximum-pool-size: 10
      connection-timeout: 30000
      validation-timeout: 5000

  jpa:
    hibernate:
      ddl-auto: update   # create ? update (?? ?? ??? ??? ??)
    show-sql: true
    defer-datasource-initialization: true
    properties:
      hibernate:
        format_sql: true
    database: mysql

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: profile, email
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"   # ???
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "${BASE_URL}/login/oauth2/code/{registrationId}" # ?? / ??
            scope: name, email, profile_image
            client-name: Naver
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "${BASE_URL}/login/oauth2/code/{registrationId}" # ?? / ??
            scope: profile_nickname, profile_image
            client-name: Kakao
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

jwt:
  # .env? JWT_SECRET? ??? JWT_SECRET_KEY? ???? ??
  secret: mySecretKey123456789012345678901234567890
  expiration:
    access: 3600000
    refresh: 1209600000

oauth2:
  url:
    base: http://localhost:3000
    path:
      signup: /oauth/signup
      auth: /oauth/authenticated

product:
  sync:
    cron: "0 0 * * * *"

odcloud:
  base-url: https://api.odcloud.kr
  service:
    key: ${ODCLOUD_SERVICE_KEY:}

firebase:
  web:
    vapid-key: BOx7rbfSOiX3dyVWlgmslQAoV6s2vTYWYHFRhR8t4YNGTS9no9UA_3We8j6TithuJue5dCxXKAKiTYGkh0Y0bIg

xai:
  api:
    key: ${XAI_API_KEY:}
  model: grok-3
  base-url: https://api.x.ai/v1