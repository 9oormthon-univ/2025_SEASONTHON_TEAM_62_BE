plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.kbsw'
version = '0.0.1-SNAPSHOT'
description = 'seasonthon'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


dependencies {
    // for valid annotation
    implementation("org.springframework.boot:spring-boot-starter-validation")

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'


    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    // for jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    //oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //swagger
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.34'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'


    //webclient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'




}


tasks.named('test') {
    useJUnitPlatform()
}
